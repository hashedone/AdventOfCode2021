use std::collections::HashMap;

#[allow(unused)]
fn print(h:&HashMap<(i32,i32),char>,d:i32)
{
    println!("size:{}",d);
    
    for y in -d..=d {
        for x in -d..=d {
            print!("{}",h.get(&(x,y)).unwrap_or(&'.'));
        }        
        println!();
    }
}

fn enchance(alg:&str,f:&HashMap<(i32,i32),char>,d:i32,empty:char)->HashMap<(i32,i32),char>
{
    let po: Vec<(i32,i32)> = vec![ 
        (-1,-1),
        ( 0,-1),
        ( 1,-1),
        (-1, 0),
        ( 0, 0),
        ( 1, 0),
        (-1, 1),
        ( 0, 1),
        ( 1, 1),
    ];

    let mut res : HashMap<(i32,i32),char> = HashMap::new();

    for y in -d..=d {
        for x in -d..=d {
            let mut id : usize = 0;

            for (p_id,p) in po.iter().enumerate() 
            {
                 if f.get(&((x+p.0),(y+p.1))).unwrap_or(&empty)==&'#' 
                 { 
                     id|=1<<(8-p_id);  
                 }
            }

            res.insert((x,y),alg.chars().nth(id).unwrap() );
        }           
    }
    res
}

fn enhance(data:&[String],times:usize)->usize
{
    let alg:&str = &data[0].to_owned();
    let mut field : HashMap<(i32,i32),char> = HashMap::new();
    
    let size = data[2].len();
    let d = ((size-1)/2) as i32;

    for (y,line) in data.iter().enumerate() {
        if y>1 {
            for (x,c) in line.chars().enumerate()
            {
                field.insert(((x) as i32-d,y as i32-d-2),c);
            }
        }
    }

    let mut empty = '.';
    let size = d + (times as i32)/2 + 90;

    for _ in 0..times {
        field = enchance(alg,&field,size as i32,empty);

        if empty=='.' { empty='#'; }
                 else { empty='.'; }
    }

    let limit = size - 60;
    field.into_iter().filter(|(pos,v)| v==&'#' && pos.0>=-limit && pos.0<=limit && pos.1>=-limit && pos.1<=limit ).count()
}

pub fn part1(data:&[String])->usize
{
    enhance(data,2)
}

pub fn part2(data:&[String])->usize
{
    enhance(data,50)
}

#[allow(unused)]
pub fn solve(data:&[String])
{    
    println!("Day20");
    println!("part1:{}",part1(data));
    println!("part2:{}",part2(data));
}

#[test]
fn test1()
{
    let v = vec![
to_string(),
        "".to_string(),
        "#..#.".to_string(),
        "#....".to_string(),
        "##..#".to_string(),
        "..#..".to_string(),
        "..###".to_string(),
    ];
    assert_eq!(part1(&v),35);
}

#[test]
fn test2()
{
    let v = vec![
to_string(),
        "".to_string(),
        ".#.#.########.##.#...##.####...##..#####...##..#.#.###..#...#.#.##.#.....#..#.###...##..#.###.###.##".to_string(),
        ".######.#..##.##...#.#.####.#.###..#..#.##.##...##.#...##..#.######...##....###...###..#.#.##.##....".to_string(),
        "..######.#.#.##.#.##.###.##..#####.####..#......#.##.###.#.#.##...#####.###..###...#..#..#..##.#....".to_string(),
        "###..##.#...##.#.#...######..#.#..##..##.#.##.#.#.#.##.#..####.#.#.##......#.#.#...#.##..#.###.###.#".to_string(),
        "#.#.#...#..####...#.#..#.##.####.#..#..###########...#....#.#.##.###..#####.#.#.#.###...##..####.#..".to_string(),
        "#.#..#.##.#..#..#..#....##.#.#.#...#..###.#.##.##.#.#.##.##..#.#.####.#######....###..#.######.#.#..".to_string(),
        "......###..#..##.####.##.##..#..#.##.##.#..#...###...####.#..#...###.##.#.#####.....#...#..#...####.".to_string(),
        "####..##.###.#...##..#.##....#..##.##..####.#.#.####.##..#..#.....#.###......#.#....#.#.....#.#..#..".to_string(),
        ".###.####.#..###..#.#.#.#...##.####.#..#..##....#...###.#.#....#..#######.###.....#.#.#.##...##.#..#".to_string(),
        "##.#......#.##.###.#.##..##.##..#######.###..##..#.#####..#.#..#.#.#..#..##..##.##...#####.#.##.####".to_string(),
        ".#.###....##.......#######..#.########..#..##..#.####.###..#..###.##..#...####.#.#..#.##.######.#..#".to_string(),
        "..###.#.##..##.#....#..#.####.....#.#..#..##.##.###..#.###.....##..#.##..#..#.#...#...#.#########.##".to_string(),
        "..#.#.#.#..#...#.##.#.##.#..#...##.#..........#.###.##.##....#####...#.#####.###.#......#..#.#.#..##".to_string(),
        "#....#..#.#.#.####.#####.#.#.####.###......#.....#.#..######....##....#.##..##.##...#.#####.##..##.#".to_string(),
        "#.#....#####....###.###.#.#...#.##.#..........#....##.#..##..##.####.##.#.##....##..#.#.##..##.#.###".to_string(),
        "..####...####..##.#.....#........#.#..##..#.#..###.....####...#...#.###....#....##.#..##.#.##....##.".to_string(),
        "...#.###........####...#...##..#..##.#.######...#...#.#.#...###....##..##.#..##.......###.##.###...#".to_string(),
        "##.#####...#.#.##.##.#...#.....#.##.########.....#.##..#.####.##...#......####..#.#..#..#...#.......".to_string(),
        ".....###..##.###.#.#.#.....##.#.####...#..######.##....#.##.#.#.#...##.####.####.##....##.#.#.###..#".to_string(),
        ".########..#.#.#.##..#..#..#.#..#..#.#.##.###.###.#...#.#..#####..##.###.#.##..###.###.#.#.####...##".to_string(),
        "###..##.##...#...#.....####.#.#......##.####..#......##..#####.#.....#.###.##.....#.##...#...#...###".to_string(),
        "#.#.#.....##.##..#..#.###.#..##..##..#....#...##.....##..##.####.#######.....#........###..#.##.#.##".to_string(),
        ".#....##..###.#..###.#...###.#...###...#.#..####..######......##.##.##..#...#..#####.####...##..#...".to_string(),
        "####.#..#.##....#.#.#...#.#.#####.###.#..##.#.###.....#..#.##......#.##...##..##...##..####.#...##..".to_string(),
        "....#.####..#..##.####.#######...#..#########.##.##..#..#.##.##.#.###.##.#.#....#####.###...#.####.#".to_string(),
        "..#.....##...###..#.##...#.#...###...#######.##..####.##.##..##.#########..###........##....#..#..#.".to_string(),
        ".#.##.#.#.##.....##.#.##..###.###.#.....###...###..#.#.#####.##.#....##.#.##.##.##.#.#....#........#".to_string(),
        ".#.#..#.#............#....###.#...####..####....#..#.##..#.##..#####...###.######...##..#####..###..".to_string(),
        "###.#..##.#...##..#.#..#..##.#..#..#..#..#####......##.##..#####..#......#..#####.##.####......##.##".to_string(),
        "##...#...##.#####..#...#.#.....#.#..###.#..#.####.....#.....#.#.#.#.###.####..#.......##.#....#..##.".to_string(),
        "#...#.#..#####..###.........#.####.###..#....###...#......#...#.#..#.....#####..#.###...#.#...#.....".to_string(),
        "###....#..##.##.####.###.#.#.##.#.#....##..#....##..#.#.###..######.#.#.#..####.##...####..##..##.##".to_string(),
        ".###...##.#.#####.#...#.###..##..###....#.##....#...#.#..#...##.###...#.#.#.#######......###.###.#.#".to_string(),
        ".#.#.#.....#..##..#.##.#..#.....#.#.######..#.##.#....###.#....#...#####..#.######.###....###...####".to_string(),
        "####..#....########...#..##..#####.#...#.##..##..###...###.#####....##.#.#..#.###.#.#..#.#.#..#.###.".to_string(),
        ".##.##.##.#####...#..#..#.###.#.#..###.#......###.##.#.###..#####.#.#...#.###.#.#.###.##.#...#.##.#.".to_string(),
        "#.#.##....#####...##.#.##.######.#.#.##.###.#.......###......##..###.#.###...##..##.#.#...#..##.####".to_string(),
        "##.#....#.##.#..#...#.#...#.##......####.#.#..#..###.#####.#...##.####...#..###.##.#.##..###.####.#.".to_string(),
        "#.#..#.#.##...##.....###.#.#.#..##.###.#######........###..#.....####.#.##.##...####.##.#.##.###.###".to_string(),
        "##...#.####..#...#...##.#.##..#.##.###..#.##..##......#..#.#...######..#....#.######..######..####..".to_string(),
        ".....#.#.......####.....#..#.####.#...##..##...#....#.########.#.#.##..##.##..####..##.####..#.#.###".to_string(),
        ".#..#.#....#..##..#....##...###........#.#..#.##.####....###..#..##...#..##.#.#.###.#.#.#..#.####...".to_string(),
        "#.#...###.#....#...##############...###..##...#.#.##..#..#....#...####....##..###.##..##..##.#..##.#".to_string(),
        "##..#....#...#..#..##.#..###....#.#.#.###.#.#.###..###..####.###.#.#.###.#..###.#.###.#.##...#.#####".to_string(),
        "#..#..####.....###..#.#...##.######..####..#..#....#####...#...#..#..#.....#.##.####......#..##.###.".to_string(),
        "##.##..###.###.#..###...#.####...#....#........#..#..##..##..##.#.##....#.......#.###...#..###.#....".to_string(),
        "#.##.#.#..#..###..###...#...#.###..####.#.#....#.#.......##...#..#......##....##.#####.......#...#..".to_string(),
        "....#..#..##.##.#.##.#.##..#.##..##.##.##.##..##.######.##..##.....#.###..#...#.##.#.#.####.###.###.".to_string(),
        ".###....##.##..##..#.###..##.#..#.#.##..##.###..##.###..#......########.#####....##...#...##...##.##".to_string(),
        ".###.###.#.#######.......#.#.#.##.##..#.#.#.##..#.##...##.##.#...##.#.#######.#..#..##..#.#..##.##.#".to_string(),
        "....#.###.#.##...##..#...#...#..##...#.##...##.##.##.#.#####.....#.#.#.##..####.####.#..####..#..##.".to_string(),
        "##..#.##.#######.#.#...###.#....###.###..##.###.##.##.#.#..##.....#.##......##.###..##.#.#.##..##...".to_string(),
        "...#####.#.##.#..##....##.###.##.#..##..###......#.#..####.##...##.#.###...##.....#..#..###..#####..".to_string(),
        ".#####.#.#..#....####.#####.#..##..#.#####.##..#.#.#..##...#.#..######.###..##....###.#....###...#.#".to_string(),
        "..###......##.##.#.##..#..##.....##....##.##..##.....###.#..##.#.#######..#...####..#.###.#####.###.".to_string(),
        "##..#.######.####..#.#..###.#..#.#..#######.#...#...##.#.###.#.##..##.#......##.#.#..##.#.#.#.####..".to_string(),
        "..#.#.####.##..##.#.#.#..####.#.##...###..#.##..#.##.###..####......#..#..#####.#..#.#####.#.###.###".to_string(),
        "#..#.#.....#.#...#..###.####..##..#....##.#.###..##..#.#..#.####...##..##..#..####...#########....##".to_string(),
        ".#.....#......##.#..#.####.######..#.#.#.#.##...#..#..#...#.###..#....#..#.#...#####..###.##...#.##.".to_string(),
        ".####....#.###..#..###.#...#..###.#.#..#......###.##.#.#.#.#####..#######..####.##.....#....#..##.#.".to_string(),
        "...#.##.#.#..####.#####..##..#.##.###.#####..###...##...##.##..#.####..##.#...####...#..##......###.".to_string(),
        "###...##.....#.###...##.#..#.#......##..#...##.#..##.#.#..#.###..#..#####..#.###..#.#...#..##.#.#.#.".to_string(),
        "##.##.##.#.#.#.####.##..##....#.####.####.####...##.####.#....###....###.###.#..#.####.#...####.#.#.".to_string(),
        "####.###...####.#.##...#...##..##...##....#.#.####..#..#.....#.....##....###.....###...#...##.#.###.".to_string(),
        "######..#..#####...#..#..######.##...#.###.#....####..####.##.#.#..#.#.####.##.####..##...####.##.#.".to_string(),
        "##....#.#...#..###..#.##.#.#...###..####.....#.##.#.####..#.##....##...##########..##...###.#.###.##".to_string(),
        "..#.#######....#####..##.####.##.#####..###.#.#..####.....###########...##.#....#.#..##.##.###..###.".to_string(),
        "##.....##...#..#....#####...#...#..#.#.#.#.####....##...####.#.#.#.....#.#..........#.###..##.#.#.#.".to_string(),
        ".#####...#..#.##..##.#...#.#.##..###..#.#....#...#.#.#..#.#..#..#.###.#...######.#.####..##..##.#...".to_string(),
        "..#.#.#.##..#.##..#.###......###..#....##.###.#..###.#...##.#.#.....#.##....##.##.##.#...####.####.#".to_string(),
        "##..#.##.##.##.#....##.#..#..#.##.###..##.##.#.#.#......####..##.#.#.###.....##.....#.##..####..##.#".to_string(),
        ".###.#.##.#..##.##.#.###.#.##.##.#####...#.#..#..#..#..#.####..#.######..#.#.#...#..#####...#.#..##.".to_string(),
        "..#...#.####.####.####...#..#..##..#.##.#.#..#..####..#...#.####.#.###.##..#......#..#...#..#..###..".to_string(),
        ".#..#.###.......#..##.#.#..##..#.#..#..##..#.....####.###...#..#.###.##.#..#.#..##..#...##.##.##....".to_string(),
        "#....##..#...##.###.#......##..###...##.###..##..###.####.....#...###..#.#...#####.#.#.######..#..#.".to_string(),
        "##.###.....#...#.#..##.#.#..#.#....#...#..##.######.###.#.####.#.######...#.#.#....##.##..#...#...#.".to_string(),
        ".......#..#.##..#..##...#.##.#####..###.####.###.#.#..###....#.#........#..#.#.#.......####..#......".to_string(),
        "#####...##.######....#.#.##.#..##...#..#..#..#...#..##.###....#.#.......##...#.###.###..####.##.###.".to_string(),
        ".###.##.#....#.#..#..#..##....##...##.#...##....#......#####...####.######.#.#.##.##..##.#.#.....#..".to_string(),
        "..#.##..#.####..####.##.#...#..####..##.....###.#...###..#.###.######.#.#.##..#.#.#####.#.##.#.##...".to_string(),
        ".##.###########.#..####.#.####..#.####.##########..#.##.#.#.#..#.#..#.#####.....##.#...#.###..#.##..".to_string(),
        "...###.#.#..#.#.#.#....#..##..####.##...###.#....#.#.####.#.#..#..####...####..###.##..######.##....".to_string(),
        "#..#####.#######.#.###......#..#.#.##.##.###.#.##.#...#....#.#####..###..##.#.#####.#..#..#.###.#..#".to_string(),
        "#.####..#..#.......###..#..####.#.#.#..#.#..#..#.#...#####.#.......####.#.#.##.##.#..#..##.#....##.#".to_string(),
        "###.###...#..#..##.#..#.#..#..#####.#.#####.....#..#..####....##.##.....#.....#.###.#.#.#.##.#.####.".to_string(),
        ".#.##.#.#..#.#####.#.##.#.###.#...#..#..#.#...##.#.##......#.#.#####..#......###.########.#..#.###.#".to_string(),
        "#.##.....#.####..######..##..#...#.....##..##..#.#.##.###.#.#.#.#.....#...#.#..###..##..##.######.##".to_string(),
        "####......#.##..#.##..##.##..#.##.....#####...#.#...###.#..##..###.##.###..............##.#.#....#.#".to_string(),
        "###...##.##.##.####....####..#...##...#.####.#....#.....#####.....##...##..###.#...##.#...##.##.##..".to_string(),
        "#.#.####...###.....###.###.##.###.....##.##.....###..###..##......##..####.#..##.#.##....##.#.#..#.#".to_string(),
        "####...###.#####.#####.......##..##.###..#..##.##..#..###.#..#..###.....##..##..##.##.#..####.#.#.#.".to_string(),
        "######....#.##.##.#.###...##...###.###.#.##.###....##.#......#.##.##.#####...#..##....###...#..##...".to_string(),
        "..#...........##..........#.##.#.##.##.###...##..##.#####.#####.#...##..####.....#.##....#..#.###.##".to_string(),
        ".#..##.#...#.#####...##.#.#.###.#.#..##..#..##########..#.#...#...#...##.##.#...##..#.#.#.##.#..#..#".to_string(),
        "..##....##.#..#...#.#...#.#....#..#.#.#####.##.#......#...##..######..##....####..##.##.##.###.###..".to_string(),
        "#.......#..############...##....##...#.#....#...##..###..##....####..##....#...##.###...#..#...#####".to_string(),
        "..##..##..#.###.#.##.#.####.#.##...#.#..#.#####...######...######.####...###.#.#.##..#.######..#.#..".to_string(),
        "###.#....#####..#.##.##..###..##.#..#.#.#.##.#......#..#....##.#.#.###..#.#######.###..#..#..#.###..".to_string(),
        "#...#.#..#.####.###..##.#.#####...#.#.##..#..#.#####.#.###.##.####..#..##.#.##...##...####.#..#.###.".to_string(),
        "...#.##.##...#.#...####....#..#####...#.#.....####.##.######.#.#...#...###.##..##.#.#.#..#...###.#..".to_string(),
           ];
    assert_eq!(part1(&v),5326);
}


#[test]
fn test3()
{
    let v = vec![
to_string(),
        "".to_string(),
        "#..#.".to_string(),
        "#....".to_string(),
        "##..#".to_string(),
        "..#..".to_string(),
        "..###".to_string(),
    ];
    assert_eq!(part2(&v),3351);
}
